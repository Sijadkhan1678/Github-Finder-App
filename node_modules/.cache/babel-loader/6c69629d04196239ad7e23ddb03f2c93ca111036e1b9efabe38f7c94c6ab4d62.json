{"ast":null,"code":"var _jsxFileName = \"/workspaces/Github-Finder-App/src/context/github/githubState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet githubClientId;\nlet githubClientSecret;\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\nconst GithubState = props => {\n  _s();\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  // Get User\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  });\n\n  // Set Loading\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GithubState;\nexport default GithubState;\nvar _c;\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"sources":["/workspaces/Github-Finder-App/src/context/github/githubState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS,\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = (props) => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false,\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n  const searchUsers = async (text) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items,\n    });\n  };\n\n  // Get User\n  const getUser = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: GET_USER,\n      payload: res.data,\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async (username) => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos,\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}